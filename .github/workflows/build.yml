# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Build and Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  get_days:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        aoc-year: [2022]

    outputs:
      year: ${{ matrix.aoc-year }}
      days: ${{ steps.generate-matrix.outputs.days }}
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'npm'
      - run: npm ci
      - name: Generate day matrix for ${{ matrix.aoc-year }}
        id: generate-matrix
        run: |
          DAYS=$(node --loader ts-node/esm.mjs --require ./src/_remove_warnings.cjs ./src/aoc.ts list -y ${{ matrix.aoc-year }})
          echo "days=${DAYS}" >> $GITHUB_OUTPUT
      - name: Echo output of generate-matrix
        run: echo "${{ toJSON(steps.generate-matrix.outputs) }}"

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        aoc-year: [2022]

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        cache: 'npm'
    - run: npm ci

    - name: Run scripts for ${{ matrix.aoc-year }}
      run: node --loader ts-node/esm.mjs ./src/aoc.ts -y ${{ matrix.aoc-year }}

    - name: Run tests for ${{ matrix.aoc-year }}
      run: node --loader ts-node/esm.mjs ./src/aoc.ts test -y ${{ matrix.aoc-year }}
